Index: conftest.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nfrom tkinter import messagebox\r\nimport re\r\nimport sys\r\n\r\n# –ö–æ–Ω—Ñ–∏–≥: –∏–º—è_–ø–æ–ª—è -> (–º–µ—Ç–∫–∞, —Ç–∏–ø_–ø–æ–ª—è, —Ñ—É–Ω–∫—Ü–∏—è_–≤–∞–ª–∏–¥–∞—Ü–∏–∏)\r\nFIELDS_CONFIG = [\r\n    (\"login\", \"–õ–æ–≥–∏–Ω\", \"entry\", lambda v: re.fullmatch(r\"[A-Za-z0-9]+\", v) is not None),\r\n    (\"password\", \"–ü–∞—Ä–æ–ª—å\", \"password\", lambda v: (\r\n        any(c.islower() for c in v) and\r\n        any(c.isupper() for c in v) and\r\n        any(c.isdigit() for c in v) and\r\n        any(c in r\"!@#$%^&*()-_=+[]{};:'\\\",.<>?/\\\\|`~\" for c in v) and\r\n        all(c.isprintable() for c in v)\r\n    )),\r\n    (\"url\", \"URL\", \"entry\", lambda v: re.fullmatch(r\"https?://[^\\s/$.?#].[^\\s]*\", v) is not None),\r\n]\r\n\r\n\r\nclass InputDialog(tk.Toplevel):\r\n    def __init__(self, parent):\r\n        super().__init__(parent)\r\n        self.title(\"–í–≤–µ–¥–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö\")\r\n        self.attributes('-topmost', True)\r\n\r\n        self.entries = {}\r\n        self.result = None\r\n\r\n        # –¶–∏–∫–ª –ø–æ –∫–æ–Ω—Ñ–∏–≥—É\r\n        for i, (field_name, label_text, field_type, _) in enumerate(FIELDS_CONFIG):\r\n            tk.Label(self, text=label_text).grid(row=i, column=0, sticky=\"w\", padx=5, pady=5)\r\n\r\n            entry = tk.Entry(self, show=\"*\" if field_type == \"password\" else \"\")\r\n            entry.grid(row=i, column=1, padx=5, pady=5)\r\n\r\n            # URL –ø–æ–¥—Å–≤–µ—Ç–∫–∞ \"–Ω–∞ –ª–µ—Ç—É\"\r\n            if field_name == \"url\":\r\n                entry.bind(\"<KeyRelease>\", self.validate_url_live)\r\n\r\n            self.entries[field_name] = entry\r\n\r\n        # –ö–Ω–æ–ø–∫–∏\r\n        btn_frame = tk.Frame(self)\r\n        btn_frame.grid(row=len(FIELDS_CONFIG), column=0, columnspan=2, pady=10)\r\n\r\n        tk.Button(btn_frame, text=\"OK\", command=self.on_ok).pack(side=\"left\", padx=5)\r\n        tk.Button(btn_frame, text=\"Cancel\", command=self.on_cancel).pack(side=\"left\", padx=5)\r\n\r\n        # –ö–Ω–æ–ø–∫–∞ \"–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å\"\r\n        for name, label, field_type, _ in FIELDS_CONFIG:\r\n            if field_type == \"password\":\r\n                tk.Checkbutton(btn_frame, text=\"–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å\",\r\n                               command=lambda e=self.entries[name]: self.toggle_password(e)).pack(side=\"left\", padx=5)\r\n\r\n        # –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ\r\n        first_field = list(self.entries.values())[0]\r\n        first_field.focus_set()\r\n\r\n        self.bind(\"<Return>\", lambda e: self.on_ok())\r\n\r\n    def toggle_password(self, entry):\r\n        if entry.cget(\"show\") == \"*\":\r\n            entry.config(show=\"\")\r\n        else:\r\n            entry.config(show=\"*\")\r\n\r\n    def validate_url_live(self, event):\r\n        url = event.widget.get()\r\n        pattern = r\"https?://[^\\s/$.?#].[^\\s]*\"\r\n        if re.fullmatch(pattern, url):\r\n            event.widget.config(bg=\"lightgreen\")\r\n        else:\r\n            event.widget.config(bg=\"lightcoral\")\r\n\r\n    def on_ok(self):\r\n        data = {}\r\n        for field_name, label_text, _, validator in FIELDS_CONFIG:\r\n            value = self.entries[field_name].get().strip()\r\n            if not validator(value):\r\n                messagebox.showerror(\"–û—à–∏–±–∫–∞\", f\"–ü–æ–ª–µ '{label_text}' –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ!\", parent=self)\r\n                return\r\n            data[field_name] = value\r\n        self.result = data\r\n        self.destroy()\r\n\r\n    def on_cancel(self):\r\n        self.result = None\r\n        self.destroy()\r\n        sys.exit()\r\n\r\n\r\ndef get_user_input():\r\n    root = tk.Tk()\r\n    root.withdraw()\r\n    dialog = InputDialog(root)\r\n    root.wait_window(dialog)\r\n    return dialog.result\r\n\r\n#\r\n# if __name__ == \"__main__\":\r\n#     result = get_user_input()\r\n#     print(result)\r\n\r\n\r\n# –í–∏–∫–ª–∏–∫ —Ñ–æ—Ä–º–∏\r\n# user_data = get_user_input()\r\n# print(user_data)\r\n# @pytest.fixture(scope=\"session\")\r\n# def user_data():\r\n#     \"\"\"–§—ñ–∫—Å—Ç—É—Ä–∞, —è–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç—ñ–≤ –ø–æ–∫–∞–∑—É—î —Ñ–æ—Ä–º—É —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ\"\"\"\r\n#     # return open_form()\r\n#     return get_user_input()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/conftest.py b/conftest.py
--- a/conftest.py	(revision 09d5229ddeb14cad05ff6cce917742c1ee846938)
+++ b/conftest.py	(date 1755262159917)
@@ -3,90 +3,118 @@
 import re
 import sys
 
-# –ö–æ–Ω—Ñ–∏–≥: –∏–º—è_–ø–æ–ª—è -> (–º–µ—Ç–∫–∞, —Ç–∏–ø_–ø–æ–ª—è, —Ñ—É–Ω–∫—Ü–∏—è_–≤–∞–ª–∏–¥–∞—Ü–∏–∏)
+
+# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª–µ–π
 FIELDS_CONFIG = [
-    ("login", "–õ–æ–≥–∏–Ω", "entry", lambda v: re.fullmatch(r"[A-Za-z0-9]+", v) is not None),
-    ("password", "–ü–∞—Ä–æ–ª—å", "password", lambda v: (
-        any(c.islower() for c in v) and
-        any(c.isupper() for c in v) and
-        any(c.isdigit() for c in v) and
-        any(c in r"!@#$%^&*()-_=+[]{};:'\",.<>?/\\|`~" for c in v) and
-        all(c.isprintable() for c in v)
-    )),
-    ("url", "URL", "entry", lambda v: re.fullmatch(r"https?://[^\s/$.?#].[^\s]*", v) is not None),
+    {"label": "–õ–æ–≥–∏–Ω", "name": "login", "type": "text", "validate": "login"},
+    {"label": "–ü–∞—Ä–æ–ª—å", "name": "password", "type": "password", "validate": "password"},
+    {"label": "URL", "name": "url", "type": "text", "validate": "url"},
 ]
+
+# –†–µ–≥—É–ª—è—Ä–∫–∏
+LOGIN_REGEX = re.compile(r'^[A-Za-z0-9]+$')
+PASSWORD_REGEX = re.compile(
+    r'^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\w\s]).+$'
+)
+URL_REGEX = re.compile(
+    r'^(https?://)?([\w\-]+\.)+[a-zA-Z]{2,}(/[\w\-./?%&=]*)?$'
+)
 
 
 class InputDialog(tk.Toplevel):
     def __init__(self, parent):
         super().__init__(parent)
         self.title("–í–≤–µ–¥–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö")
-        self.attributes('-topmost', True)
+        self.geometry("400x250")
+        self.attributes('-topmost', True)  # –ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–∏—Ö –æ–∫–æ–Ω
+        self.center_window(400, 250)
 
         self.entries = {}
-        self.result = None
+        self.result = {}
+
+        self.create_widgets()
 
-        # –¶–∏–∫–ª –ø–æ –∫–æ–Ω—Ñ–∏–≥—É
-        for i, (field_name, label_text, field_type, _) in enumerate(FIELDS_CONFIG):
-            tk.Label(self, text=label_text).grid(row=i, column=0, sticky="w", padx=5, pady=5)
+    def center_window(self, width, height):
+        self.update_idletasks()
+        screen_width = self.winfo_screenwidth()
+        screen_height = self.winfo_screenheight()
+        x = (screen_width - width) // 2
+        y = (screen_height - height) // 2
+        self.geometry(f"{width}x{height}+{x}+{y}")
 
-            entry = tk.Entry(self, show="*" if field_type == "password" else "")
-            entry.grid(row=i, column=1, padx=5, pady=5)
+    def create_widgets(self):
+        for idx, field in enumerate(FIELDS_CONFIG):
+            label = tk.Label(self, text=field["label"])
+            label.grid(row=idx, column=0, padx=10, pady=5, sticky="w")
 
-            # URL –ø–æ–¥—Å–≤–µ—Ç–∫–∞ "–Ω–∞ –ª–µ—Ç—É"
-            if field_name == "url":
-                entry.bind("<KeyRelease>", self.validate_url_live)
+            entry = tk.Entry(self, show="*" if field["type"] == "password" else "")
+            entry.grid(row=idx, column=1, padx=10, pady=5, sticky="ew")
 
-            self.entries[field_name] = entry
+            # –î–ª—è URL ‚Äî "–Ω–∞ –ª–µ—Ç—É" –ø—Ä–æ–≤–µ—Ä–∫–∞
+            if field["validate"] == "url":
+                entry.bind("<KeyRelease>", lambda e, ent=entry: self.validate_url_live(ent))
 
-        # –ö–Ω–æ–ø–∫–∏
-        btn_frame = tk.Frame(self)
-        btn_frame.grid(row=len(FIELDS_CONFIG), column=0, columnspan=2, pady=10)
+            self.entries[field["name"]] = entry
 
-        tk.Button(btn_frame, text="OK", command=self.on_ok).pack(side="left", padx=5)
-        tk.Button(btn_frame, text="Cancel", command=self.on_cancel).pack(side="left", padx=5)
+            # –ö–Ω–æ–ø–∫–∞ "–ø–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å"
+            if field["type"] == "password":
+                show_btn = tk.Button(self, text="üëÅ", command=lambda e=entry: self.toggle_password(e))
+                show_btn.grid(row=idx, column=2, padx=5)
 
-        # –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å"
-        for name, label, field_type, _ in FIELDS_CONFIG:
-            if field_type == "password":
-                tk.Checkbutton(btn_frame, text="–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å",
-                               command=lambda e=self.entries[name]: self.toggle_password(e)).pack(side="left", padx=5)
+        # –ö–Ω–æ–ø–∫–∏ OK –∏ Cancel
+        ok_btn = tk.Button(self, text="OK", command=self.on_ok)
+        ok_btn.grid(row=len(FIELDS_CONFIG), column=0, pady=10)
 
-        # –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ
-        first_field = list(self.entries.values())[0]
-        first_field.focus_set()
+        cancel_btn = tk.Button(self, text="Cancel", command=self.on_cancel)
+        cancel_btn.grid(row=len(FIELDS_CONFIG), column=1, pady=10)
 
-        self.bind("<Return>", lambda e: self.on_ok())
+        self.grid_columnconfigure(1, weight=1)
 
-    def toggle_password(self, entry):
-        if entry.cget("show") == "*":
-            entry.config(show="")
+        # –°—Ç–∞–≤–∏–º —Ñ–æ–∫—É—Å –≤ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ (–ª–æ–≥–∏–Ω)
+        first_field_name = FIELDS_CONFIG[0]["name"]
+        self.entries[first_field_name].focus_set()
+
+    def validate_url_live(self, entry):
+        text = entry.get()
+        if URL_REGEX.match(text):
+            entry.config(bg="white")
         else:
+            entry.config(bg="#ffcccc")  # —Ä–æ–∑–æ–≤—ã–π —Ñ–æ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ
+
+    def toggle_password(self, entry):
+        if entry.cget("show") == "":
             entry.config(show="*")
-
-    def validate_url_live(self, event):
-        url = event.widget.get()
-        pattern = r"https?://[^\s/$.?#].[^\s]*"
-        if re.fullmatch(pattern, url):
-            event.widget.config(bg="lightgreen")
         else:
-            event.widget.config(bg="lightcoral")
+            entry.config(show="")
 
     def on_ok(self):
-        data = {}
-        for field_name, label_text, _, validator in FIELDS_CONFIG:
-            value = self.entries[field_name].get().strip()
-            if not validator(value):
-                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ü–æ–ª–µ '{label_text}' –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ!", parent=self)
+        for field in FIELDS_CONFIG:
+            name = field["name"]
+            value = self.entries[name].get()
+
+            # –í–∞–ª–∏–¥–∞—Ü–∏—è –ª–æ–≥–∏–Ω–∞
+            if field["validate"] == "login" and not LOGIN_REGEX.match(value):
+                messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"{field['label']} –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ª–∞—Ç–∏–Ω—Å—å–∫—ñ –±—É–∫–≤–∏ —Ç–∞ —Ü–∏—Ñ—Ä–∏")
                 return
-            data[field_name] = value
-        self.result = data
+
+            # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
+            if field["validate"] == "password" and not PASSWORD_REGEX.match(value):
+                messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"{field['label']} –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –≤–µ–ª–∏–∫—ñ —Ç–∞ –º–∞–ª—ñ –ª–∞—Ç–∏–Ω—Å—å–∫—ñ –±—É–∫–≤–∏, —Ü–∏—Ñ—Ä–∏ —ñ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∏")
+                return
+
+            # –í–∞–ª–∏–¥–∞—Ü–∏—è URL
+            if field["validate"] == "url" and not URL_REGEX.match(value):
+                messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"{field['label']} –º–∞—î –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç")
+                return
+
+            self.result[name] = value
+
         self.destroy()
 
     def on_cancel(self):
         self.result = None
         self.destroy()
-        sys.exit()
+        sys.exit()  # –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–ª–Ω–æ—Å—Ç—å—é
 
 
 def get_user_input():
@@ -96,10 +124,10 @@
     root.wait_window(dialog)
     return dialog.result
 
-#
+
 # if __name__ == "__main__":
-#     result = get_user_input()
-#     print(result)
+#     data = get_user_input()
+#     print(data)
 
 
 # –í–∏–∫–ª–∏–∫ —Ñ–æ—Ä–º–∏
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f26f3d9d-4f72-4b35-a2fb-0db078a7d126\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/experiment.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/Beginning_Test_With_Form.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/Beginning_Test_With_Form.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/conftest.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/conftest.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test_example.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test_example.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\",\r\n    \"assignee\": \"SerhiiKotliar\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/SerhiiKotliar/Beginning_Test_With_Form.git\",\r\n    \"accountId\": \"a8fbca1c-9f4d-42a0-a9bb-cdf60ab978f3\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 5\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"31JauIuEXgLWjlWZJylgClVIC99\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\r\n    \"Python tests.Python tests for test_example.test_username_not_empty.executor\": \"Run\",\r\n    \"Python tests.Python tests in Beginning_Test_With_Form.executor\": \"Run\",\r\n    \"Python tests.Python tests in First_Test_With_Form.executor\": \"Run\",\r\n    \"Python.conftest (1).executor\": \"Run\",\r\n    \"Python.conftest.executor\": \"Run\",\r\n    \"Python.experiment.executor\": \"Run\",\r\n    \"Python.test_first.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"last_opened_file_path\": \"G:/Visual Studio 2010/Projects/Python/Beginning_Test_With_Form\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"G:\\Visual Studio 2010\\Projects\\Python\\Beginning_Test_With_Form\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python tests.Python tests in Beginning_Test_With_Form\">\r\n    <configuration name=\"conftest\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Beginning_Test_With_Form\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/conftest.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"experiment\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Beginning_Test_With_Form\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/experiment.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests for test_example.test_username_not_empty\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Beginning_Test_With_Form\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;test_example.test_username_not_empty&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PYTHON&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in Beginning_Test_With_Form\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Beginning_Test_With_Form\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Python tests in First_Test_With_Form\" type=\"tests\" factoryName=\"Autodetect\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Python\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/../PythonProject/First_Test_With_Form\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"_new_additionalArguments\" value=\"&quot;&quot;\" />\r\n      <option name=\"_new_target\" value=\"&quot;$PROJECT_DIR$/../PythonProject/First_Test_With_Form&quot;\" />\r\n      <option name=\"_new_targetType\" value=\"&quot;PATH&quot;\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python tests.Python tests in Beginning_Test_With_Form\" />\r\n        <item itemvalue=\"Python.conftest\" />\r\n        <item itemvalue=\"Python.experiment\" />\r\n        <item itemvalue=\"Python tests.Python tests for test_example.test_username_not_empty\" />\r\n        <item itemvalue=\"Python tests.Python tests in First_Test_With_Form\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-b3ae9b5d7125-f0eec537fc84-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.23892.439\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f26f3d9d-4f72-4b35-a2fb-0db078a7d126\" name=\"Changes\" comment=\"\" />\r\n      <created>1755244853475</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1755244853475</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 09d5229ddeb14cad05ff6cce917742c1ee846938)
+++ b/.idea/workspace.xml	(date 1755262292020)
@@ -4,14 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f26f3d9d-4f72-4b35-a2fb-0db078a7d126" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/experiment.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/Beginning_Test_With_Form.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Beginning_Test_With_Form.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+    <list default="true" id="f26f3d9d-4f72-4b35-a2fb-0db078a7d126" name="Changes" comment="–ø–æ–ª—è —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ;&#10;–∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–∫–∞–∑–∞—Ç–∏/–°—Ö–æ–≤–∞—Ç–∏¬ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–º –∂–µ Entry –ø–∞—Ä–æ–ª—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è);&#10;–≤–∞–ª–∏–¥–∞—Ü–∏—è ¬´–Ω–∞ –ª–µ—Ç—É¬ª —á–µ—Ä–µ–∑ validate=&quot;key&quot; + %P (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏ –≤—Å—Ç–∞–≤–∫—É);&#10;–ª–æ–≥–∏–Ω ‚Äî —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã; –ø–∞—Ä–æ–ª—å ‚Äî —Ç–æ–ª—å–∫–æ –ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –ø–ª—é—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ OK; URL ‚Äî —Ñ–æ—Ä–º–∞—Ç;&#10;Cancel –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–≤ —Ç.—á. –ø–æ–¥ pytest) —á–µ—Ä–µ–∑ os._exit(0)">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/conftest.py" beforeDir="false" afterPath="$PROJECT_DIR$/conftest.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test_example.py" beforeDir="false" afterPath="$PROJECT_DIR$/test_example.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -191,6 +186,45 @@
       <option name="presentableId" value="Default" />
       <updated>1755244853475</updated>
     </task>
+    <task id="LOCAL-00001" summary="–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞—á–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –∏ –≤–≤–æ–¥ —Å –Ω–µ—ë –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–æ–≤">
+      <option name="closed" value="true" />
+      <created>1755257830684</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1755257830684</updated>
+    </task>
+    <task id="LOCAL-00002" summary="–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫—Ä–∞—Å–∏–≤–∞—è —Ñ–∏—á–∞ –¥–ª—è –æ—à–∏–±–æ–∫">
+      <option name="closed" value="true" />
+      <created>1755259576070</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1755259576070</updated>
+    </task>
+    <task id="LOCAL-00003" summary="–ø–æ–ª—è —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ;&#10;–∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–∫–∞–∑–∞—Ç–∏/–°—Ö–æ–≤–∞—Ç–∏¬ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–º –∂–µ Entry –ø–∞—Ä–æ–ª—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è);&#10;–≤–∞–ª–∏–¥–∞—Ü–∏—è ¬´–Ω–∞ –ª–µ—Ç—É¬ª —á–µ—Ä–µ–∑ validate=&quot;key&quot; + %P (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏ –≤—Å—Ç–∞–≤–∫—É);&#10;–ª–æ–≥–∏–Ω ‚Äî —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã; –ø–∞—Ä–æ–ª—å ‚Äî —Ç–æ–ª—å–∫–æ –ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –ø–ª—é—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ OK; URL ‚Äî —Ñ–æ—Ä–º–∞—Ç;&#10;Cancel –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–≤ —Ç.—á. –ø–æ–¥ pytest) —á–µ—Ä–µ–∑ os._exit(0)">
+      <option name="closed" value="true" />
+      <created>1755261641032</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1755261641032</updated>
+    </task>
+    <task id="LOCAL-00004" summary="–ø–æ–ª—è —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ;&#10;–∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–∫–∞–∑–∞—Ç–∏/–°—Ö–æ–≤–∞—Ç–∏¬ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–º –∂–µ Entry –ø–∞—Ä–æ–ª—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è);&#10;–≤–∞–ª–∏–¥–∞—Ü–∏—è ¬´–Ω–∞ –ª–µ—Ç—É¬ª —á–µ—Ä–µ–∑ validate=&quot;key&quot; + %P (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏ –≤—Å—Ç–∞–≤–∫—É);&#10;–ª–æ–≥–∏–Ω ‚Äî —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã; –ø–∞—Ä–æ–ª—å ‚Äî —Ç–æ–ª—å–∫–æ –ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –ø–ª—é—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ OK; URL ‚Äî —Ñ–æ—Ä–º–∞—Ç;&#10;Cancel –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–≤ —Ç.—á. –ø–æ–¥ pytest) —á–µ—Ä–µ–∑ os._exit(0)">
+      <option name="closed" value="true" />
+      <created>1755262049671</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1755262049671</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞—á–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –∏ –≤–≤–æ–¥ —Å –Ω–µ—ë –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–æ–≤" />
+    <MESSAGE value="–î–æ–±–∞–≤–ª–µ–Ω–∞ –∫—Ä–∞—Å–∏–≤–∞—è —Ñ–∏—á–∞ –¥–ª—è –æ—à–∏–±–æ–∫" />
+    <MESSAGE value="–ø–æ–ª—è —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ;&#10;–∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–∫–∞–∑–∞—Ç–∏/–°—Ö–æ–≤–∞—Ç–∏¬ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–º –∂–µ Entry –ø–∞—Ä–æ–ª—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è);&#10;–≤–∞–ª–∏–¥–∞—Ü–∏—è ¬´–Ω–∞ –ª–µ—Ç—É¬ª —á–µ—Ä–µ–∑ validate=&quot;key&quot; + %P (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏ –≤—Å—Ç–∞–≤–∫—É);&#10;–ª–æ–≥–∏–Ω ‚Äî —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã; –ø–∞—Ä–æ–ª—å ‚Äî —Ç–æ–ª—å–∫–æ –ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –ø–ª—é—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ OK; URL ‚Äî —Ñ–æ—Ä–º–∞—Ç;&#10;Cancel –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–≤ —Ç.—á. –ø–æ–¥ pytest) —á–µ—Ä–µ–∑ os._exit(0)" />
+    <option name="LAST_COMMIT_MESSAGE" value="–ø–æ–ª—è —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ —Ü–∏–∫–ª–µ;&#10;–∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–∫–∞–∑–∞—Ç–∏/–°—Ö–æ–≤–∞—Ç–∏¬ª —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–µ–º –∂–µ Entry –ø–∞—Ä–æ–ª—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è);&#10;–≤–∞–ª–∏–¥–∞—Ü–∏—è ¬´–Ω–∞ –ª–µ—Ç—É¬ª —á–µ—Ä–µ–∑ validate=&quot;key&quot; + %P (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏ –≤—Å—Ç–∞–≤–∫—É);&#10;–ª–æ–≥–∏–Ω ‚Äî —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã/—Ü–∏—Ñ—Ä—ã; –ø–∞—Ä–æ–ª—å ‚Äî —Ç–æ–ª—å–∫–æ –ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –ø–ª—é—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ OK; URL ‚Äî —Ñ–æ—Ä–º–∞—Ç;&#10;Cancel –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–≤ —Ç.—á. –ø–æ–¥ pytest) —á–µ—Ä–µ–∑ os._exit(0)" />
+  </component>
 </project>
\ No newline at end of file
